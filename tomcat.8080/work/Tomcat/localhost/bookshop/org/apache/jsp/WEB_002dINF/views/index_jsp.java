/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.7
 * Generated at: 2023-10-12 18:42:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import org.hibernate.SessionFactory;
import com.calm.webdb.util.HibernateUtil;
import org.hibernate.Session;
import org.hibernate.Transaction;
import java.util.List;
import com.calm.webdb.entity.*;
import java.util.ArrayList;
import java.util.Map;
import org.hibernate.query.Query;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_packages.add("com.calm.webdb.entity");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.hibernate.Transaction");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("org.hibernate.SessionFactory");
    _jspx_imports_classes.add("org.hibernate.query.Query");
    _jspx_imports_classes.add("com.calm.webdb.util.HibernateUtil");
    _jspx_imports_classes.add("org.hibernate.Session");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n");
      out.write("\r\n");
      out.write("    <title>Infinity | Home</title>\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"icon\" href=\"assets/resources/infinity_logo2.svg\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/css/bootstrap.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/css/style.css\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container-fluid\">\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("\r\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <hr class=\"hr-break-1\" />\r\n");
      out.write("\r\n");
      out.write("        <div class=\"col-12 justify-content-center\">\r\n");
      out.write("            <div class=\"row mb-3\">\r\n");
      out.write("\r\n");
      out.write("                <div class=\"col-4 col-lg-1 offset-4 offset-lg-1 logo-img\"></div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"col-8 col-lg-6\">\r\n");
      out.write("                    <div class=\"input-group input-group-lg mt-3 mb-3\">\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" aria-label=\"Text input with dropdown button\" id=\"basic_search_txt\"  placeholder=\"Serch by name, category, author..\" />\r\n");
      out.write("\r\n");
      out.write("                        <select class=\"btn btn-outline-primary\" id=\"basic_search_select\">\r\n");
      out.write("\r\n");
      out.write("                            <option value=\"0\" readonly>Select Category</option>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                            ");

                                // Assuming Database is a Java class with a search method
                                SessionFactory sessionFactory = HibernateUtil.getSessionFactory();
                                Session hibernateSession = sessionFactory.openSession();
                                Transaction transaction = hibernateSession.beginTransaction();

                                List<CategoryEntity> categories = hibernateSession.createQuery("FROM CategoryEntity", CategoryEntity.class).list();

//                                transaction.commit();
//                                session1.close();
                                StringBuilder options = new StringBuilder();
                                for (CategoryEntity category : categories) {
                                    options.append("<option value=\"").append(category.getId()).append("\">")
                                            .append(category.getName()).append("</option>");
                                
      out.write("\r\n");
      out.write("\r\n");
      out.write("                                <option value=\"");
      out.print( category.getId());
      out.write('"');
      out.write('>');
      out.print( category.getName());
      out.write("</option>\r\n");
      out.write("\r\n");
      out.write("                                ");

                                }
                                
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        </select>\r\n");
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"col-2 d-grid gap-2\">\r\n");
      out.write("                    <button class=\"btn btn-outline-primary mt-3 search-btn shadow-sm\" onclick=\"basicSearchHome(0);\">Search</button>\r\n");
      out.write("                    <!-- <button class=\"btn btn-outline-primary \">Search</button> -->\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- <div class=\"col-1\">\r\n");
      out.write("                        <label class=\"form-label fs-3 bi bi-search text-blue\"></label>\r\n");
      out.write("                </div> -->\r\n");
      out.write("\r\n");
      out.write("                <div class=\"col-2 mt-4\">\r\n");
      out.write("                    <a href=\"advancedSearch.php\" class=\"link-secondary link-1\">Advanced</a>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <hr class=\"hr-break-1\" />\r\n");
      out.write("\r\n");
      out.write("        <div class=\"col-12 shadow-sm\" id=\"basicSearchResult\">\r\n");
      out.write("\r\n");
      out.write("            <div class=\"col-12 d-none d-lg-block\">\r\n");
      out.write("                <div class=\"row\">\r\n");
      out.write("                    <div id=\"carouselExampleCaptions\" class=\"col-8 offset-2 carousel slide shadow rounded\" data-bs-ride=\"carousel\">\r\n");
      out.write("                        <div class=\"carousel-indicators\">\r\n");
      out.write("                            <button type=\"button\" data-bs-target=\"#carouselExampleCaptions\" data-bs-slide-to=\"0\" class=\"active\" aria-current=\"true\" aria-label=\"Slide 1\"></button>\r\n");
      out.write("                            <button type=\"button\" data-bs-target=\"#carouselExampleCaptions\" data-bs-slide-to=\"1\" aria-label=\"Slide 2\"></button>\r\n");
      out.write("                            <button type=\"button\" data-bs-target=\"#carouselExampleCaptions\" data-bs-slide-to=\"2\" aria-label=\"Slide 3\"></button>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"carousel-inner\">\r\n");
      out.write("                            <div class=\"carousel-item active\">\r\n");
      out.write("                                <img src=\"assets/resources/crousel_img/Award-Winners-2020.png\" class=\"d-block poster-img-1\">\r\n");
      out.write("                                <div class=\"carousel-caption d-none d-md-block poster-caption\">\r\n");
      out.write("                                    <h5 class=\"poster-title\">Welcome to Infinity</h5>\r\n");
      out.write("                                    <p class=\"poster-text\">The World's Best Online Bookshop.</p>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"carousel-item\">\r\n");
      out.write("                                <img src=\"assets/resources/crousel_img/books2.jpg\" class=\"d-block poster-img-1\">\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"carousel-item\">\r\n");
      out.write("                                <img src=\"assets/resources/crousel_img/Homepage.jpg\" class=\"d-block poster-img-1\">\r\n");
      out.write("                                <div class=\"carousel-caption d-none d-md-block poster-caption-1\">\r\n");
      out.write("                                    <h5 class=\"poster-title\">Be Free...</h5>\r\n");
      out.write("                                    <p class=\"poster-text\">Experience the Lowest Delivery Costs With Us.</p>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleCaptions\" data-bs-slide=\"prev\">\r\n");
      out.write("                            <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n");
      out.write("                            <span class=\"visually-hidden\">Previous</span>\r\n");
      out.write("                        </button>\r\n");
      out.write("                        <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleCaptions\" data-bs-slide=\"next\">\r\n");
      out.write("                            <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n");
      out.write("                            <span class=\"visually-hidden\">Next</span>\r\n");
      out.write("                        </button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <hr class=\"hr-break-1\" />\r\n");
      out.write("\r\n");
      out.write("            <div class=\"col-12\">\r\n");
      out.write("                <div class=\"row\">\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"col-12 col-lg-6\">\r\n");
      out.write("                        <div class=\"row my-3 mx-3\">\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"card text-bg-light mb-3 shodowC1\" style=\"max-width: 95%;\">\r\n");
      out.write("                                <div class=\"card-header\">Our Brand</div>\r\n");
      out.write("                                <div class=\"card-body\">\r\n");
      out.write("                                    <h5 class=\"card-title\">Find your choice to read</h5>\r\n");
      out.write("                                    <p class=\"card-text\">Every book or e-book you buy from us comes with our guarantee and easy discount. Join Infinity book shop for your best choice.</p>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"mask1 d-sm-none d-lg-block\">\r\n");
      out.write("                                <img src=\"assets/resources/carousel2/freddie-marriage-w8JiSVyjy-8-unsplash.jpg\" class=\"imgSize\" alt=\"Cinque Terre\" width=\"600\" height=\"400\">\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"col-12 col-lg-6\">\r\n");
      out.write("                        <div class=\"row\">\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"col-5 col-lg-3 my-3 mx-4\">\r\n");
      out.write("                                <div class=\"card bg-dark text-white\">\r\n");
      out.write("                                    <img src=\"assets/resources/books_img/Harry-Potter-and-the-Philosophers-Stone.jpeg\" class=\"card-img\" style=\"width: 200px; height: 300px;\">\r\n");
      out.write("                                    <div class=\"card-img-overlay\">\r\n");
      out.write("                                        <h5 class=\"card-title text-black\" style=\"font-weight: bold;\">Harry Potter and the Philosophers Stone</h5>\r\n");
      out.write("                                        <p class=\"card-text text-warning\" style=\"font-weight: bold;\">Last updated 3 mins ago</p>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"col-5 col-lg-3 my-3 mx-4\">\r\n");
      out.write("                                <div class=\"card bg-dark text-white\">\r\n");
      out.write("                                    <img src=\"assets/resources/books_img/mother-maxim-gorky.jpg\" class=\"card-img\" style=\"width: 200px; height: 300px;\">\r\n");
      out.write("                                    <div class=\"card-img-overlay\">\r\n");
      out.write("                                        <h5 class=\"card-title text-black\" style=\"font-weight: bold;\">Mother - Maxim Gorky</h5>\r\n");
      out.write("                                        <p class=\"card-text text-warning\" style=\"font-weight: bold;\">Last updated 3 mins ago</p>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"col-5 col-lg-3 my-3 mx-4\">\r\n");
      out.write("                                <div class=\"card bg-dark text-white\">\r\n");
      out.write("                                    <img src=\"assets/resources/books_img/oliver twist.jpg\" class=\"card-img\" style=\"width: 200px; height: 300px;\">\r\n");
      out.write("                                    <div class=\"card-img-overlay\">\r\n");
      out.write("                                        <h5 class=\"card-title text-black\" style=\"font-weight: bold;\">Oliver Twist</h5>\r\n");
      out.write("                                        <p class=\"card-text text-warning\" style=\"font-weight: bold;\">Last updated 3 mins ago</p>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"col-5 col-lg-3 my-3 mx-4\">\r\n");
      out.write("                                <div class=\"card bg-dark text-white\">\r\n");
      out.write("                                    <img src=\"assets/resources/books_img/the communist manifesto-karl marx.jpg\" class=\"card-img\" style=\"width: 200px; height: 300px;\">\r\n");
      out.write("                                    <div class=\"card-img-overlay\">\r\n");
      out.write("                                        <h5 class=\"card-title text-black\" style=\"font-weight: bold;\">The Communist Manifesto -Karl Marx</h5>\r\n");
      out.write("                                        <p class=\"card-text text-warning\" style=\"font-weight: bold;\">Last updated 3 mins ago</p>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"col-5 col-lg-3 my-3 mx-4\">\r\n");
      out.write("                                <div class=\"card bg-dark text-white\">\r\n");
      out.write("                                    <img src=\"assets/resources/books_img/notebooks of leanardo da vinci.jpg\" class=\"card-img\" style=\"width: 200px; height: 300px;\">\r\n");
      out.write("                                    <div class=\"card-img-overlay\">\r\n");
      out.write("                                        <h5 class=\"card-title text-black\" style=\"font-weight: bold;\">Notebooks of Leanardo da vinci</h5>\r\n");
      out.write("                                        <p class=\"card-text text-warning\" style=\"font-weight: bold;\">Last updated 3 mins ago</p>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"col-5 col-lg-3 my-3 mx-4\">\r\n");
      out.write("                                <div class=\"card bg-dark text-white\">\r\n");
      out.write("                                    <img src=\"assets/resources/books_img/big_bang_theory.jpg\" class=\"card-img\" style=\"width: 200px; height: 300px;\">\r\n");
      out.write("                                    <div class=\"card-img-overlay\">\r\n");
      out.write("                                        <h5 class=\"card-title text-black\" style=\"font-weight: bold;\">Big bang Theory</h5>\r\n");
      out.write("                                        <p class=\"card-text text-warning\" style=\"font-weight: bold;\">Last updated 3 mins ago</p>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            ");

                // Assuming CategoryEntity class is "categories1"
                List<CategoryEntity> categories1 = hibernateSession.createQuery("FROM CategoryEntity", CategoryEntity.class).list();

                for (CategoryEntity category : categories1) {

            
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <!-- Category name -->\r\n");
      out.write("            <div class=\"col-12\">\r\n");
      out.write("                <a href=\"#\" class=\"link-dark link2\">");
      out.print( category.getName() );
      out.write("</a>&nbsp;&nbsp;\r\n");
      out.write("                <a href=\"#\" class=\"link-dark link3\">See All&nbsp; &rarr;</a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- Category name -->\r\n");
      out.write("\r\n");
      out.write("            <!-- books -->\r\n");
      out.write("\r\n");
      out.write("            <div class=\"col-12 mb-3\">\r\n");
      out.write("\r\n");
      out.write("                <div class=\"row border border-primary\">\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"col-12 col-lg-12\">\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"row justify-content-center gap-2\">\r\n");
      out.write("\r\n");
      out.write("    ");


//        String hql = "FROM GrnItemEntity gi INNER JOIN gi.grnByGrnId g INNER JOIN gi.StockByStockId s INNER JOIN s.bookByBookId b INNER JOIN b.categoryByCategoryId cbc " +
//                "WHERE cbc.id = :categoryId " +
//                "AND b.statusId = 1 " +
//                "ORDER BY g.dateTime DESC";

        Query<GrnItemEntity> grnQuery = hibernateSession.createQuery("FROM GrnItemEntity gi " +
                        "INNER JOIN gi.grnByGrnId g " +
                        "INNER JOIN gi.StockByStockId s " +
                        "INNER JOIN s.bookByBookId b " +
                        "INNER JOIN b.categoryByCategoryId cbc " +
                        "WHERE cbc.id = :categoryId AND b.statusId = 1 " +
                        "ORDER BY g.dateTime DESC", GrnItemEntity.class)
                .setParameter("categoryId", category.getId())
                .setMaxResults(4)
                .setFirstResult(0);
        List<GrnItemEntity> products = grnQuery.getResultList();

    
      out.write("\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"card col-6 col-lg-2 mt-2 mb-2 shadow-sm\" style=\"width: 18rem;\">\r\n");



                                List<Integer> bookIds = new ArrayList<>();
                                for (GrnItemEntity grnItem : products) {
                                    Integer bookId = grnItem.getStockByStockId().getBookId();
                                    bookIds.add(bookId);

                                Query<ImagesEntity> query2 = hibernateSession.createQuery("SELECT i FROM ImagesEntity i WHERE i.productId = :productId", ImagesEntity.class)
                                       .setParameter("productId", grnItem.getStockByStockId().getBookByBookId().getId());
                                List<ImagesEntity> images = query2.getResultList();

                                for(ImagesEntity image: images){

                                    
      out.write("\r\n");
      out.write("                                <img src=\"");
      out.print( image.getCode() );
      out.write("\" class=\"card-img-top card-img-top img-thumbnail\" style=\"height: 200px;\" />\r\n");
      out.write("                                ");

                                    }
                                
      out.write("\r\n");
      out.write("                                <div class=\"card-body ms-0 m-0\">\r\n");
      out.write("                                    <h5 class=\"card-title\">");
      out.print( grnItem.getStockByStockId().getBookByBookId().getTitle());
      out.write("<span class=\"badge bg-info\">New</span></h5>\r\n");
      out.write("                                    <span class=\"card-text text-primary\">Rs.");
      out.print( grnItem.getStockByStockId().getSellingPrice());
      out.write(".00</span>\r\n");
      out.write("                                    <br />\r\n");
      out.write("\r\n");
      out.write("                                    ");


                                         if(grnItem.getStockByStockId().getQty()>0){

                                    
      out.write("\r\n");
      out.write("\r\n");
      out.write("                                    <span class=\"card-text text-warning\"><b>In Stock</b></span>\r\n");
      out.write("                                    <br />\r\n");
      out.write("                                    <span class=\"card-text text-success fw-bold\">");
      out.print( grnItem.getStockByStockId().getQty());
      out.write(" Items Available</span>\r\n");
      out.write("                                    <a href='singleProductView?id=");
      out.print( grnItem.getStockByStockId().getId() );
      out.write("' class=\"btn btn-success col-12\">Buy Now</a>\r\n");
      out.write("\r\n");
      out.write("                                    <a href=\"#\" onclick=\"addToCart(");
grnItem.getStockByStockId().getId();
      out.write(");\" class=\"btn btn-danger col-12 mt-1\">Add to Cart</a>\r\n");
      out.write("\r\n");
      out.write("                                    ");


                                         }else{

                                    
      out.write("\r\n");
      out.write("\r\n");
      out.write("                                    <span class=\"card-text text-danger\"><b>Out of Stock</b></span>\r\n");
      out.write("                                    <br />\r\n");
      out.write("                                    <span class=\"card-text text-success fw-bold\">00 Items Available</span>\r\n");
      out.write("                                    <a href=\"#\" class=\"btn btn-success col-12 disabled\">Buy Now</a>\r\n");
      out.write("                                    <a href=\"#\" class=\"btn btn-danger col-12 mt-1 disabled\">Add to Cart</a>\r\n");
      out.write("\r\n");
      out.write("                                    <?php\r\n");
      out.write("                                    ");

                                    }
                                         List<UsersEntity> user = (List<UsersEntity>) session.getAttribute("u");
//
                                        if (user != null) {
                                            String userEmail = "empty";
                                            for(UsersEntity data : user){
                                                userEmail=data.getEmail();
                                            }

                                            Query<WatchlistEntity> query = hibernateSession.createQuery("SELECT w FROM WatchlistEntity w " +
                                             "WHERE w.stockId = :stockId AND w.usersEmail = :userEmail", WatchlistEntity.class)
                                              .setParameter("stockId", grnItem.getStockByStockId().getId())
                                              .setParameter("userEmail", userEmail);
                                            List<WatchlistEntity> watchLists = query.getResultList();

                                            int wl = 0;
                                            for(WatchlistEntity watchlist : watchLists){
                                                wl++;
                                            }
                                            if(wl!=0){
                                    
      out.write("\r\n");
      out.write("\r\n");
      out.write("                                    <a class=\"btn btn-secondary col-12 mt-1\" onclick='addToWatchlist(");
      out.print( grnItem.getStockByStockId().getId() );
      out.write(");'>\r\n");
      out.write("                                        <i class=\"bi bi-heart-fill fs-5 text-danger\" id=\"heart");
      out.print( grnItem.getStockByStockId().getId() );
      out.write("\"></i>\r\n");
      out.write("                                    </a>\r\n");
      out.write("                                    ");

                                        }else{
                                    
      out.write("\r\n");
      out.write("                                    <a class=\"btn btn-secondary col-12 mt-1\" onclick='addToWatchlist(");
      out.print( grnItem.getStockByStockId().getId() );
      out.write(");'>\r\n");
      out.write("                                        <i class=\"bi bi-heart-fill fs-5 text-white\" id=\"heart");
      out.print( grnItem.getStockByStockId().getId() );
      out.write("\"></i>\r\n");
      out.write("                                    </a>\r\n");
      out.write("                                    ");

                                        }}
                                    
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                                    <!--\r\n");
      out.write("                                                                            <a class=\"btn btn-secondary col-12 mt-1\">\r\n");
      out.write("                                                                                <i class=\"bi bi-heart-fill fs-5 text-danger\"></i></a> -->\r\n");
      out.write("\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                             ");
}
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- books -->\r\n");
      out.write("\r\n");
      out.write("            ");


                }
            
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <div class=\"toast-container position-fixed bottom-0 end-0 p-3\">\r\n");
      out.write("                <div id=\"liveToast\" class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n");
      out.write("                    <div class=\"toast-header\">\r\n");
      out.write("                        <img src=\"assets/resources/infinity_logo2.svg\" class=\"rounded me-2\" alt=\"...\">\r\n");
      out.write("                        <strong class=\"me-auto\">Infinity Book Shop</strong>\r\n");
      out.write("                        <small>Just Now</small>\r\n");
      out.write("                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"toast-body\">\r\n");
      out.write("                        Register for get our best service.\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");

    transaction.commit();
    hibernateSession.close();
Object user = session.getAttribute("u");
if (user == null) {

      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    const toastLiveExample = document.getElementById('liveToast')\r\n");
      out.write("    const toast = new bootstrap.Toast(toastLiveExample)\r\n");
      out.write("\r\n");
      out.write("    toast.show();\r\n");
      out.write("</script>\r\n");

}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"assets/js/script.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
