/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.7
 * Generated at: 2023-10-01 19:25:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class checkout_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

    String sid = request.getParameter("sid");
    String item_name = request.getParameter("item_name");
    String unitprice = request.getParameter("unitprice");
    String inputQty = request.getParameter("inputQty");
    String price = request.getParameter("price");
    String image = request.getParameter("image");

    if (sid != null && !sid.isEmpty()) {

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n");
      out.write("    <link rel=\"icon\" href=\"assets/resources/infinity_logo2.svg\" />\r\n");
      out.write("    <title>Payment Integration (Stripe)</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/css/_style.css\" />\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<button type=\"button\" onclick=\"goback()\" class=\"back\">Go Back</button>\r\n");
      out.write("<div class=\"row\">\r\n");
      out.write("    <div class=\"col-md-6\">\r\n");
      out.write("        <div class=\"form-container\">\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("            <form id=\"payment-form\" action=\"createPayment\" method=\"GET\">\r\n");
      out.write("                <div>\r\n");
      out.write("                    <input type=\"text\" id=\"c_name\" name=\"c_name\" required>\r\n");
      out.write("                    <lable>Customer Name</lable>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <input type=\"text\" id=\"address\" name=\"address\" required>\r\n");
      out.write("                    <lable>Address</lable>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <input type=\"number\" id=\"ph\" name=\"phone\" pattern=\"\\d{10}\" maxlength=\"10\" required>\r\n");
      out.write("                    <lable>Contact Number</lable>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <input type=\"text\" name=\"product_name\" value=\"");
      out.print( item_name );
      out.write("\" disabled required>\r\n");
      out.write("                    <lable>Product Name</lable>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <input type=\"text\" name=\"price\" value=\"");
      out.print( price );
      out.write("\" disabled required>\r\n");
      out.write("                    <lable>Price</lable>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <input type=\"hidden\" id=\"amount\" name=\"amount\" value=\"");
      out.print( price );
      out.write("\">\r\n");
      out.write("                <input type=\"hidden\" id=\"product_name\" name=\"product_name\" value=\"");
      out.print( item_name );
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("                <input type=\"hidden\" id=\"unitprice\" name=\"unitprice\" value=\"");
      out.print( unitprice );
      out.write("\">\r\n");
      out.write("                <input type=\"hidden\" id=\"inputQty\" name=\"inputQty\" value=\"");
      out.print( inputQty );
      out.write("\">\r\n");
      out.write("                <input type=\"hidden\" id=\"sid\" name=\"sid\" value=\"");
      out.print( sid );
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("                <script\r\n");
      out.write("                        src =\"https://checkout.stripe.com/checkout.js\" class = \"stripe-button\"\r\n");
      out.write("                        data-key = \"pk_test_51LauixIjAOH1QSloFfHFOFUN8xQ3Bc1XuB3ouIeZVK0dwXAnJZ3qpsnI7dDvsKufxmdhS0H7Y4SEM4sfpMASzh8x009HAJpvuC\"\r\n");
      out.write("                        data-amount = \"");
      out.print( Integer.parseInt(price.replace(",", "")) * 100 );
      out.write("\"\r\n");
      out.write("                data-name = \"");
      out.print( item_name );
      out.write("\"\r\n");
      out.write("                data-description = \"");
      out.print( item_name );
      out.write("\"\r\n");
      out.write("                data-image = \"");
      out.print( image );
      out.write("\"\r\n");
      out.write("                data-currency = \"lkr\"\r\n");
      out.write("                data-locale = \"auto\">\r\n");
      out.write("                </script>\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"col-md-6\">\r\n");
      out.write("        <div class=\"checkout-container\">\r\n");
      out.write("            <h4>Product Name &nbsp;:&nbsp;");
      out.print( item_name );
      out.write("</h4>\r\n");
      out.write("            <img src=\"");
      out.print( image );
      out.write("\" />\r\n");
      out.write("            <span>Price &nbsp;:&nbsp;");
      out.print( price );
      out.write("</span>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");

        }

      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    function goback(){\r\n");
      out.write("        window.history.go(-1);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    $('#ph').on('keypress',function(){\r\n");
      out.write("        var text = $(this).val().length;\r\n");
      out.write("        if(text > 10){\r\n");
      out.write("            return false;\r\n");
      out.write("        }else{\r\n");
      out.write("            $('#ph').text($(this).val());\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
