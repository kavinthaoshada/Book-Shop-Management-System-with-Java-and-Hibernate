/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.7
 * Generated at: 2023-09-24 19:28:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import org.hibernate.SessionFactory;
import com.calm.webdb.util.HibernateUtil;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.query.Query;
import com.calm.webdb.entity.*;

public final class userprofile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_packages.add("com.calm.webdb.entity");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.hibernate.Transaction");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("org.hibernate.SessionFactory");
    _jspx_imports_classes.add("org.hibernate.query.Query");
    _jspx_imports_classes.add("com.calm.webdb.util.HibernateUtil");
    _jspx_imports_classes.add("org.hibernate.Session");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n");
      out.write("    <title>Infinity | User Profile</title>\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"icon\" href=\"assets/resources/logo.svg\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/bootstrap.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-alpha1/dist/css/bootstrap.min.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/style.css\" />\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"bg-primary\" style=\"background-image: linear-gradient(rgb(255, 255, 255), rgb(255, 177, 229));\">\r\n");
      out.write("\r\n");
      out.write("<div class=\"container-fluid\">\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("\r\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("        ");

        List<UsersEntity> users = (List<UsersEntity>) session.getAttribute("u");
                if (users != null) {
                String user_email;
                for (UsersEntity user : users) {
                    user_email =user.getEmail();

        SessionFactory sessionFactory = HibernateUtil.getSessionFactory();
        Session session1 = sessionFactory.openSession();
        Transaction transaction = session1.beginTransaction();
        Query<UsersEntity> query = session1.createQuery("FROM UsersEntity u " +
                        "INNER JOIN u.genderByGenderId g WHERE u.email = :email", UsersEntity.class)
                .setParameter("email", user_email);
        List<UsersEntity> genderUPs = query.getResultList();

        Query<ProfileImageEntity> query1 = session1.createQuery("FROM ProfileImageEntity pi " +
                        "WHERE pi.usersEmail = :email", ProfileImageEntity.class)
                 .setParameter("email", user_email);
        List<ProfileImageEntity> upImages = query1.getResultList();

        Query<UserHasAddressEntity> query2 = session1.createQuery("FROM UserHasAddressEntity uha " +
          "INNER JOIN uha.cityByCityId c " +
          "INNER JOIN c.DistrictByDistrictId d " +
          "INNER JOIN d.ProvinceByProvinceId p " +
          "WHERE uha.usersEmail = :email", UserHasAddressEntity.class)
                 .setParameter("email", user_email);
        List<UserHasAddressEntity> upAddresses = query2.getResultList();

        transaction.commit();
        session1.close();
        for(UsersEntity genderUP : genderUPs ) {
        
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <div class=\"col-12 bg-body rounded mt-4 mb-4\">\r\n");
      out.write("            <div class=\"row g-2\">\r\n");
      out.write("\r\n");
      out.write("                <div class=\"col-md-3 border-end\">\r\n");
      out.write("                    <div class=\"d-flex flex-column align-items-center text-center p-3 py-5\">\r\n");
      out.write("                        ");

                            String path = null;
                            for(ProfileImageEntity upImage : upImages){
                                path = upImage.getPath();
                            }
                            if(path == null){
                        
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        <img id=\"viewimg\" src=\"assets/resources/user_icon.svg\" class=\"rounded mt-5\" style=\"width: 150px;\" />\r\n");
      out.write("                        ");

                        }else{
                        
      out.write("\r\n");
      out.write("                        <img id=\"viewimg\" src=\"");
      out.print( path );
      out.write("\" class=\"rounded mt-5\" style=\"width: 150px;\" />\r\n");
      out.write("                        ");

                        }
                        
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        <span class=\"fw-bold\">");
      out.print( genderUP.getFname()+" "+genderUP.getLname() );
      out.write("</span>\r\n");
      out.write("                        <span class=\"text-black-50\">");
      out.print( genderUP.getEmail() );
      out.write("</span>\r\n");
      out.write("\r\n");
      out.write("                        <input class=\"d-none\" type=\"file\" accept=\"img\" id=\"profileimg\" />\r\n");
      out.write("                        <label class=\"btn btn-primary mt-5\" for=\"profileimg\" onclick=\"changeImage();\">Update Profile Image</label>\r\n");
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"col-md-5 border-end\">\r\n");
      out.write("                    <div class=\"p-3 py-5\"></div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n");
      out.write("                        <h4 class=\"fw-bold\">Profile Setting</h4>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"row mt-3\">\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"col-md-6\">\r\n");
      out.write("                            <label class=\"form-label\">First Name</label>\r\n");
      out.write("                            <input type=\"text\" id=\"fn\" class=\"form-control\" value=\"");
      out.print( genderUP.getFname() );
      out.write("\"/>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"col-md-6\">\r\n");
      out.write("                            <label class=\"form-label\">Last Name</label>\r\n");
      out.write("                            <input type=\"text\" id=\"ln\" class=\"form-control\" value=\"");
      out.print( genderUP.getLname() );
      out.write("\"/>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"col-md-12\">\r\n");
      out.write("                            <label class=\"form-label\">Mobile</label>\r\n");
      out.write("                            <input type=\"text\" id=\"mo\" class=\"form-control\" value=\"");
      out.print( genderUP.getMobile() );
      out.write("\"/>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"col-md-12\">\r\n");
      out.write("                            <label class=\"form-label\">Password</label>\r\n");
      out.write("                            <div class=\"input-group mb-3\">\r\n");
      out.write("                                <input type=\"password\" class=\"form-control\" aria-describedby=\"viewpassword\" id=\"pwtxt\" value=\"");
      out.print( genderUP.getPassword() );
      out.write("\" disabled>\r\n");
      out.write("                                <button class=\"btn btn-outline-primary\" id=\"viewpassword\" onclick=\"viewpw();\"><i class=\"bi bi-eye-fill\"></i></button>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"col-md-12\">\r\n");
      out.write("                            <label class=\"form-label\">Email</label>\r\n");
      out.write("                            <input type=\"email\" class=\"form-control\" value=\"");
      out.print( genderUP.getEmail() );
      out.write("\" readonly />\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"col-md-12 mt-1\">\r\n");
      out.write("                            <label class=\"form-label\">Registered Date</label>\r\n");
      out.write("                            <input type=\"text\" class=\"form-control\" value=\"");
      out.print( genderUP.getJoinedDate() );
      out.write("\" readonly/>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        ");

                            String line1 = null;
                            String line2 = null;
                            String postalCode = null;
                            for(UserHasAddressEntity upAddress : upAddresses){
                                line1 = upAddress.getLine1();
                                line2 = upAddress.getLine2();
                                postalCode = upAddress.getPostalCode();
                            }
                            if(line1 != null){
                        
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"col-md-12 mt-1\">\r\n");
      out.write("                            <label class=\"form-label\">Address Line 01</label>\r\n");
      out.write("                            <input type=\"text\" id=\"l11\" class=\"form-control\" value=\"");
      out.print( line1 );
      out.write(">\" readonly/>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        ");

                        }else{
                        
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"col-md-12 mt-1\">\r\n");
      out.write("                            <label class=\"form-label\">Address Line 01</label>\r\n");
      out.write("                            <input type=\"text\" id=\"l1\" class=\"form-control\" value=\"\" placeholder=\"Address line 01\"/>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        ");

                        }
                        
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        ");

                            if(line2 != null){
                        
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"col-md-12 mt-1\">\r\n");
      out.write("                            <label class=\"form-label\">Address Line 02</label>\r\n");
      out.write("                            <input type=\"text\" id=\"l22\" class=\"form-control\" value=\"");
      out.print( line2 );
      out.write("\" readonly/>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        ");

                           }else{
                        
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"col-md-12 mt-1\">\r\n");
      out.write("                            <label class=\"form-label\">Address Line 02</label>\r\n");
      out.write("                            <input type=\"text\" id=\"l2\" class=\"form-control\" value=\"\" placeholder=\"Address line 02\"/>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                       ");

                           }
                       
      out.write("\r\n");
      out.write("                        ");

                            SessionFactory sessionFactory2 = HibernateUtil.getSessionFactory();
                            Session session2 = sessionFactory2.openSession();
                            Transaction transaction2 = session2.beginTransaction();

                            Query<CityEntity> c = session2.createQuery("FROM CityEntity", CityEntity.class);
                            List<CityEntity> cities = c.getResultList();
                            Query<DistrictEntity> d = session2.createQuery("FROM DistrictEntity", DistrictEntity.class);
                            List<DistrictEntity> districts = d.getResultList();
                            Query<ProvinceEntity> p = session2.createQuery("FROM ProvinceEntity", ProvinceEntity.class);
                            List<ProvinceEntity> provinces = p.getResultList();

                            transaction2.commit();
                            session2.close();

                        
      out.write("\r\n");
      out.write("                        <div class=\"col-md-6 mt-1\">\r\n");
      out.write("                            <label class=\"form-label\">Province</label>\r\n");
      out.write("                            <select id=\"pr\" class=\"form-select\">\r\n");
      out.write("                                <option value=\"0\">Select Province</option>\r\n");
      out.write("                                ");

                                    for(ProvinceEntity province : provinces){
                                
      out.write("\r\n");
      out.write("\r\n");
      out.write("                                <option value=\"");
      out.print( province.getId() );
      out.write("\"\r\n");
      out.write("                                ");

                                    for(UserHasAddressEntity upAddress : upAddresses){
                                    if(upAddress.getCityByCityId().getDistrictByDistrictId().getProvinceId()==province.getId()) {
                                
      out.write("\r\n");
      out.write("                                selected\r\n");
      out.write("                                ");

                                    }}
                                
      out.write('>');
      out.print( province.getName());
      out.write("</option>\r\n");
      out.write("\r\n");
      out.write("                                ");

                                    }
                                
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                            </select>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"col-md-6 mt-1\">\r\n");
      out.write("                            <label class=\"form-label\">District</label>\r\n");
      out.write("                            <select class=\"form-select\">\r\n");
      out.write("                                <option id=\"dr\" value=\"0\">Select District</option>\r\n");
      out.write("                                ");

                                    for(DistrictEntity district : districts){
                                
      out.write("\r\n");
      out.write("\r\n");
      out.write("                                <option value=\"");
      out.print( district.getId() );
      out.write("\"\r\n");
      out.write("                                        ");

                                            for(UserHasAddressEntity upAddress : upAddresses){
                                            if(upAddress.getCityByCityId().getDistrictId()==district.getId()){
                                        
      out.write("\r\n");
      out.write("                                        selected\r\n");
      out.write("                                        ");

                                            }}
                                        
      out.write('>');
      out.print( district.getName());
      out.write("</option>\r\n");
      out.write("\r\n");
      out.write("                                ");

                                    }
                                
      out.write("\r\n");
      out.write("                            </select>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"col-md-6 mt-1\">\r\n");
      out.write("                            <label class=\"form-label\">City</label>\r\n");
      out.write("                            <select id=\"ci\" class=\"form-select\">\r\n");
      out.write("                                <option value=\"0\">Select City</option>\r\n");
      out.write("                                ");

                                    for(CityEntity city : cities){
                                
      out.write("\r\n");
      out.write("\r\n");
      out.write("                                <option value=\"");
      out.print( city.getId() );
      out.write("\"\r\n");
      out.write("                                        ");

                                            for(UserHasAddressEntity upAddress : upAddresses){
                                            if(upAddress.getCityId()==city.getId()){
                                        
      out.write("\r\n");
      out.write("                                        selected\r\n");
      out.write("                                        ");

                                            }}
                                        
      out.write('>');
      out.print( city.getName());
      out.write("</option>\r\n");
      out.write("\r\n");
      out.write("                                ");

                                    }
                                
      out.write("\r\n");
      out.write("                            </select>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"col-md-6 mt-1\">\r\n");
      out.write("                            <label class=\"form-label\">Postal Code</label>\r\n");
      out.write("\r\n");
      out.write("                            ");

                                if(postalCode != null){
                            
      out.write("\r\n");
      out.write("                            <input type=\"text\" id=\"pc\" class=\"form-control\" value=\"");
      out.print( postalCode );
      out.write("\"/>\r\n");
      out.write("                            ");

                                }else{
                            
      out.write("\r\n");
      out.write("                            <input type=\"text\" id=\"pc\" class=\"form-control\" placeholder=\"Postel Code\"/>\r\n");
      out.write("                            ");

                                }
                            
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"col-md-12 mt-1\">\r\n");
      out.write("                            <label class=\"form-label\">Gender</label>\r\n");
      out.write("                            <input type=\"text\" class=\"form-control\" value=\"");
      out.print( genderUP.getGenderByGenderId().getName() );
      out.write("\" readonly/>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"col-md-12 d-grid mt-3 mb-3\">\r\n");
      out.write("                            <button class=\"btn btn-primary\" onclick=\"update_profile();\">Update My Profile</button>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");

        }
        
      out.write("\r\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"assets/script.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");

     }

   }else {
 
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script> window.location = \"\"; </script>\r\n");
      out.write("\r\n");


}


      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
